name: Frontend CI

on:
  push:
    branches: [main, develop]
    paths: ['src/web/**']
  pull_request:
    branches: [main, develop]
    paths: ['src/web/**']

# Ensure only one workflow runs at a time per branch/PR
concurrency:
  group: frontend-ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  VITE_API_URL: http://localhost:8000
  VITE_WS_URL: ws://localhost:8000

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          check-latest: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-

      - name: Install dependencies
        run: |
          cd src/web
          pnpm install --frozen-lockfile

      - name: Lint
        run: |
          cd src/web
          pnpm lint

      - name: Type check
        run: |
          cd src/web
          pnpm typecheck

      - name: Unit tests
        run: |
          cd src/web
          pnpm test -- --coverage --coverageThreshold='{"global":{"branches":80,"functions":80,"lines":80,"statements":80}}'

      - name: E2E tests
        run: |
          cd src/web
          pnpm test:e2e -- --coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./src/web/coverage
          flags: frontend
          fail_ci_if_error: true

      - name: Build
        run: |
          cd src/web
          pnpm build

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: src/web/dist
          key: build-${{ github.sha }}

      - name: Check browser compatibility
        run: |
          cd src/web
          npx browserslist-lint dist/**/*.js
        env:
          BROWSERSLIST_TARGETS: >
            chrome >= 83,
            firefox >= 78,
            safari >= 14,
            edge >= 88

      - name: Check bundle size
        run: |
          cd src/web
          npx bundlesize
        env:
          BUNDLESIZE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Report status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { job, conclusion } = context;
            const status = conclusion === 'success' ? 'success' : 'failure';
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status,
              target_url: `${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: `Frontend CI ${conclusion}`,
              context: 'Frontend CI'
            });